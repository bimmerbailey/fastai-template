services:
  
  api: 
    tty: true
    build:
      context: .
      dockerfile: ./projects/api/Dockerfile
      target: dev 
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./bases/fastai/api:/src/bases/fastai/api
      - ./components:/src/components
      - ./test:/src/test
      - ./projects/api:/src/projects/api
  
  postgres:
    image: postgres:17.5-bookworm
    environment:
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_PASSWORD: Password123!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/data/postgres
      - ./development/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:9.4
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: Password123!
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped

volumes:
  postgres:
  pgadmin: